local http = require 'gamesense/http'
local globals_realtime = globals.realtime
local globals_curtime = globals.curtime
local globals_frametime = globals.frametime
local globals_absolute_frametime = globals.absoluteframetime
local globals_maxplayers = globals.maxplayers
local globals_tickcount = globals.tickcount
local globals_tickinterval = globals.tickinterval
local globals_mapname = globals.mapname

local client_set_event_callback = client.set_event_callback
local client_console_log = client.log
local client_color_log = client.color_log
local client_console_cmd = client.exec
local client_userid_to_entindex = client.userid_to_entindex
local client_get_cvar = client.get_cvar
local client_set_cvar = client.set_cvar
local client_world_to_screen = client.world_to_screen
local client_latency = client.latency
local client_camera_angles = client.camera_angles
local client_trace_line = client.trace_line
local client_eye_position = client.eye_position
local client_system_time = client.system_time

local entity_get_local_player = entity.get_local_player
local entity_get_all = entity.get_all
local entity_get_players = entity.get_players
local entity_get_classname = entity.get_classname
local entity_set_prop = entity.set_prop
local entity_get_prop = entity.get_prop
local entity_is_enemy = entity.is_enemy
local entity_get_player_name = entity.get_player_name
local entity_get_player_weapon = entity.get_player_weapon
local entity_hitbox_position = entity.hitbox_position
local entity_get_steam64 = entity.get_steam64
local entity_get_bounding_box = entity.get_bounding_box
local entity_is_alive = entity.is_alive
local entity_is_dormant = entity.is_dormant

local ui_new_checkbox = ui.new_checkbox
local ui_new_slider = ui.new_slider
local ui_new_combobox = ui.new_combobox
local ui_new_multiselect = ui.new_multiselect
local ui_new_hotkey = ui.new_hotkey
local ui_new_button = ui.new_button
local ui_new_color_picker = ui.new_color_picker
local ui_reference = ui.reference
local ui_set = ui.set
local ui_get = ui.get
local ui_set_callback = ui.set_callback
local ui_set_visible = ui.set_visible
local ui_is_menu_open = ui.is_menu_open

local client_delay_call, client_set_event_callback, client_unset_event_callback, client_log, client_color_log, client_userid_to_entindex, entity_get_local_player, entity_get_player_name, globals_chokedcommands, globals_lastoutgoingcommand, globals_tickinterval, ui_get, ui_new_checkbox, ui_set_callback, type, unpack, setmetatable = client.delay_call, client.set_event_callback, client.unset_event_callback, client.log, client.color_log, client.userid_to_entindex, entity.get_local_player, entity.get_player_name, globals.chokedcommands, globals.lastoutgoingcommand, globals.tickinterval, ui.get, ui.new_checkbox, ui.set_callback, type, unpack, setmetatable

local math_floor = math.floor
local math_random = math.random
local math_sqrt = math.sqrt
local table_insert = table.insert
local table_remove = table.remove
local table_size = table.getn
local table_sort = table.sort
local string_format = string.format
local string_length = string.len
local string_reverse = string.reverse
local string_sub = string.sub
local aimbotlog_enable = ui.new_checkbox("Rage", "Other", "Advanced aimbot logging")
local on_fire_enable = ui.new_checkbox("Rage", "Other", "aim_fire log")
local on_fire_colour = ui.new_color_picker("Rage", "Other", "aim_fire log", 147, 112, 219, 255)
local on_miss_enable = ui.new_checkbox("Rage", "Other", "aim_miss log")
local on_miss_colour = ui.new_color_picker("Rage", "Other", "aim_miss log", 255, 253, 166, 255)
local on_damage_enable = ui.new_checkbox("Rage", "Other", "aim_hit log")
local on_damage_colour = ui.new_color_picker("Rage", "Other", "aim_hit log", 100, 149, 237, 255)

local function handle_menu()
	if ui_get(aimbotlog_enable) then
		ui_set_visible(on_fire_enable, true)
		ui_set_visible(on_fire_colour, true)
		ui_set_visible(on_miss_enable, true)
		ui_set_visible(on_miss_colour, true)
		ui_set_visible(on_damage_enable, true)
		ui_set_visible(on_damage_colour, true)
	else
		ui_set_visible(on_fire_enable, false)
		ui_set_visible(on_fire_colour, false)
		ui_set_visible(on_miss_enable, false)
		ui_set_visible(on_miss_colour, false)
		ui_set_visible(on_damage_enable, false)
		ui_set_visible(on_damage_colour, false)
	end
end
handle_menu()
ui.set_callback(aimbotlog_enable, handle_menu)


local g_output = function( ) end
client_set_event_callback( "shutdown", function( ) client_unset_event_callback( "output", g_output ) end )

local console_log = function(cr,cg,cb, ... )

    client_set_event_callback( "output", g_output )
    client.color_log( cr,cg,cb, "[控制台] \0" )
    client_unset_event_callback( "output", g_output )

end

local nextAttack = 0
local nextShotSecondary = 0
local nextShot = 0
local dt_ref = false
local wp_ref = 0
local ez_ref = 0
local nn_ref = 0
local paste_ref = 0
local kid_ref = 0

local function on_aim_fire(e)
    if ui_get(aimbotlog_enable) and ui_get(on_fire_enable) and e ~= nil then
    	local r, g, b = ui_get(on_fire_colour)
        local hitgroup_names = { "body", "head", "chest", "stomach", "left arm", "right arm", "left leg", "right leg", "neck", "?"}
        local group = hitgroup_names[e.hitgroup + 1] or "?"
        local tickrate = client.get_cvar("cl_cmdrate") or 64
        local target_name = entity_get_player_name(e.target)
        local ticks = math.floor((e.backtrack * tickrate) + 0.5)


        console_log(189,158,255)
        client_color_log(r, g, b, 
        "休伯利安号主炮发射! 目标 ", string.lower(target_name),
        ", 打的: ", group,
        "  伤害: ", e.damage,
        "  命中概率: ", string.format("%d", e.hit_chance),
        "%  射击角度: " .. math.floor(entity.get_prop(e.target, "m_flPoseParameter", 11) * 120 - 60 ),
        "°  flags: ", e.high_priority and 'high_priority' or '', e.refined and 'R' or '', e.expired and 'X' or '',
		e.noaccept and 'N' or '',
		e.tick_shifted and 'S' or '',
		e.teleported and 'T' or '',
		e.interpolated and 'I' or '',
		e.extrapolated and 'E' or '',
		e.boosted and 'B' or '',
		e.high_priority and 'H' or '')
    end
end

local function on_player_hurt(e)
	if ui_get(aimbotlog_enable) and ui_get(on_damage_enable) then

    local attacker_id = client.userid_to_entindex(e.attacker)
    if attacker_id == nil then
        return
    end

    if attacker_id ~= entity.get_local_player() then
        return
    end

    local attacker_id = client.userid_to_entindex(e.attacker)
    if attacker_id == nil then
        return
    end

    if target_id == entity.get_local_player() then
        return
    end

    local hitgroup_names = { "body", "head", "chest", "stomach", "left arm", "right arm", "left leg", "right leg", "neck", "?"}
    local group = hitgroup_names[e.hitgroup + 1] or "?"
    local target_id = client_userid_to_entindex(e.userid)
    local target_name = entity.get_player_name(target_id)
    local rem_health = e.health
    if rem_health <= 0 then
        rem_health = 0
    end

    local message = "休伯利安号主炮命中目标! " .. string.lower(target_name) .. ", 部位: " .. group .. "  伤害: " .. e.dmg_health .. "  剩余hp: " .. rem_health
    if rem_health <= 0 then
        message = message .. " (☠)"
    end

    
    local r, g, b = ui_get(on_damage_colour)
    console_log(164,197,255)
    client_color_log(r, g, b, message) 

    end
end

local function on_aim_miss(e)
	if ui_get(aimbotlog_enable) and ui_get(on_miss_enable) and e ~= nil then
	local r, g, b = ui_get(on_miss_colour)
    local hitgroup_names = { "body", "head", "chest", "stomach", "left arm", "right arm", "left leg", "right leg", "neck", "?" }
    local group = hitgroup_names[e.hitgroup + 1] or "?"
    local target_name = entity_get_player_name(e.target)
    local reason
    if e.reason == "?" then
    	reason = "解析器"
    elseif e.reason == "spread" then
    	reason = "航速过快造成射击误差"
    else
    	reason = e.reason
    end


        console_log(255,255,255)
        client_color_log(r, g, b,
        "休伯利安号主炮未命中目标... ", string.lower(target_name),
        ", 目标 ", group,
        "  原因 ", reason)


http.get("https://v1.hitokoto.cn/?encode=text", function(success, response)

if response.body == nil then return end

  print(response.body)
end)

    end
end

client.set_event_callback('aim_fire', on_aim_fire)
client.set_event_callback('player_hurt', on_player_hurt)
client.set_event_callback('aim_miss', on_aim_miss)



local function on_paint()

	local local_player = entity.get_local_player()

	if local_player == nil then
		return
	end
	
	if not entity.is_alive(local_player) then
		return
	end
	
	local active_weapon = entity.get_prop(local_player, "m_hActiveWeapon")
		
	if active_weapon == nil then
		return
	end
		
    nextAttack = entity.get_prop(local_player,"m_flNextAttack") 
	nextShot = entity.get_prop(active_weapon,"m_flNextPrimaryAttack")
	nextShotSecondary = entity.get_prop(active_weapon,"m_flNextSecondaryAttack")
	
	if nextAttack == nil or nextShot == nil or nextShotSecondary == nil then
		return
	end
	
	nextAttack = nextAttack + 0.5
	nextShot = nextShot + 0.5
	nextShotSecondary = nextShotSecondary + 0.5
	

		if math.max(nextShot,nextShotSecondary) < nextAttack then -- swapping
			if nextAttack - globals.curtime() > 0.00 then
dt_ref = true
if wp_ref == 0 then
wp_ref = 1
--      console_log(255,253,207)
--   client.color_log(255, 253, 166, "休伯利安号主炮开始充能 请等待..." )

end

ez_ref = 0

else

dt_ref = nil
if ez_ref == 0 then
wp_ref = 1
ez_ref = 1

--        console_log(164,197,255)
--  client.color_log(100, 149, 237, "休伯利安号主炮充能完毕。" )

end

wp_ref = 0

       end
   end
end


client.set_event_callback('paint', on_paint)
